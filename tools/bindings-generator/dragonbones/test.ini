[testandroid]
name = DragonBones
prefix = jsb_dragonbones_auto
classes = DBCCArmatureNode DragonBonesHelper

# DBCCTextureAtlas DBCCSlot DBCCEventDispatcher DBCCArmature DBCCFactory BaseFactory DragonBonesData  Animation AnimationState EventData Object Bone Slot Armature Frame WorldClock


android_headers = -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/include
android_flags = -D_SIZE_T_DEFINED_

cocosdir = ../../../frameworks/js-bindings/cocos2d-x
cocos_headers = -I%(cocosdir)s/external -I%(cocosdir)s/cocos -I%(cocosdir)s/cocos/2d -I%(cocosdir)s/cocos/editor-support -I%(cocosdir)s/cocos/platform/android -I../../../frameworks/js-bindings/bindings/manual -I../../../frameworks/js-bindings/external/spidermonkey/include/android -I%(cocosdir)s/external/chipmunk/include/chipmunk
cocos_flags = -DANDROID

clang_headers = -I%(clangllvmdir)s/lib/clang/3.3/include
clang_flags = -nostdinc -x c++ -std=c++11

dragonbones_headers = -I../../../Classes/dragonbones
dragonbones_flags = -DSKIP_BY_AUTO_BINDINGS

extra_arguments = %(android_headers)s %(android_flags)s %(cocos_headers)s %(cocos_flags)s %(clang_headers)s %(clang_flags)s %(dragonbones_headers)s %(dragonbones_flags)s %(extra_flags)s

headers = ../../../Classes/dragonbones/renderer/cocos2d-x-3.x/DBCCRenderHeaders.h

target_namespace = dragonBones
remove_prefix =
skip = BaseFactory::[getTextureAtlasMap getDragonBonesDataMap],Slot::[setDisplayList getDisplayList getBoundingBox],Armature::[getBones getBoundingBox getSlots],Animation::[getAnimationDataList setAnimationDataList],EventData::[copy typeToString borrowObject getType returnObject clearObjects clear],Bone::[getBones getSlots]
base_objects =
abstract_classes = BaseFactory Slot Armature EventData
classes_have_type_info = no
rename =
rename_functions =
rename_classes =
# classes for which there will be no "parent" lookup
classes_have_no_parents = Armature DBCCEventDispatcher DBCCTextureAtlas WorldClock

# base classes which will be skipped when their sub-classes found them.
base_classes_to_skip =

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = yes
